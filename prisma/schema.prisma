// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
// model Account {
//   id  String @id @default(auto()) @map("_id") @db.ObjectId
//   userId             String
//   type               String
//   provider           String
//   providerAccountId  String
//   refresh_token      String?  @db.String
//   access_token       String?  @db.String
//   expires_at         Int?
//   token_type         String?
//   scope              String?
//   id_token           String?  @db.String
//   session_state      String?

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }

// model Session {
//   id  String @id @default(auto()) @map("_id") @db.ObjectId
//   sessionToken String   @unique
//   userId       String
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }


// model User {
//   id  String @id @default(auto()) @map("_id") @db.ObjectId
//   name          String?
//   email         String?   @unique
//   emailVerified DateTime?
//   image         String?
//   accounts      Account[]
//   sessions      Session[]
//   feedbacks Feedback[]
// }
// model Feedback {
//   id  String @id @default(auto()) @map("_id") @db.ObjectId
//   rating Int 
//   description String
//   userId String
//   user User @relation(fields: [userId], references: [id])
// }

model User {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  username  String  
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  feedbacks Feedback[]
}
// model Project {
//   id  String @id @default(auto()) @map("_id") @db.ObjectId
//   userId String
//   user User @relation(fields: [userId], references: [id])
//   feedbacks Feedback[]
// }
model Feedback {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  rating Int
  description String
  createdAt DateTime @default(now())
  userId String
  user User @relation(fields: [userId], references: [id])
}

